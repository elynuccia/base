security:
    # encoders:
    #    App\Entity\Student:
    #       algorithm: bcrypt
    #       cost: 12
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Student
                property: code
        app_person_in_charge_provider:
            entity:
                class: App\Entity\PersonInCharge
                property: code
        app_administrator_provider:
            entity:
                class: App\Entity\Administrator
                property: schoolCode
        app_hwi:
            id: App\Security\UserProvider

        # used to reload user from session & other features (e.g. switch_user)
        chain_provider:
            chain:
                providers: [app_user_provider, app_person_in_charge_provider, app_administrator_provider, app_hwi]


        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
#        secured_area:
#            anonymous: ~
#            oauth:
#                resource_owners:
#                    auth0: "/auth0/callback"
#                login_path:        /login
#                default_target_path: welcome
#                use_forward:       false
#                failure_path:      /login
#
#                provider: chain_provider
#
#                oauth_user_provider:
#                    service: App\Security\UserProvider
#
#            logout:
#                path:   /auth0/logout
#                target: welcome

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        #main:
        secured_area:
            anonymous: true
            provider: chain_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path:   app_logout
                target: app_login

            oauth:
                resource_owners:
                    auth0: "/auth0/callback"
                login_path:        /login
                default_target_path: user_page
                use_forward:       false
                failure_path:      /login

                provider: chain_provider

                oauth_user_provider:
                    service: App\Security\UserProvider


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/userpage, roles:  ROLE_0AUTH_USER }
        - { path: /studentpage, roles: [ROLE_STUDENT, ROLE_PERSON] }
        - { path: /registration, roles: ROLE_ADMIN }
        - { path: /adminpage, roles: ROLE_ADMIN }
        - { path: ^/matrix, roles: [ROLE_ADMIN, ROLE_USER_PBS_TEAM_MEMBER] }
        - { path: ^/list, roles: [ROLE_ADMIN, ROLE_0AUTH_USER] }
        - { path: /behaviors, roles: [ROLE_ADMIN, ROLE_0AUTH_USER] }
        - { path: /minorBehavior, roles: [ROLE_ADMIN, ROLE_USER_PBS_TEAM_MEMBER] }
        - { path: ^/majorBehavior, roles: [ROLE_ADMIN, ROLE_USER_PBS_TEAM_MEMBER] }
        - { path: /minorandmajorbehaviorlist, roles: [ROLE_ADMIN, ROLE_0AUTH_USER, ROLE_USER] }
        - { path: ^/screeningtool, roles: [ROLE_0AUTH_USER, ROLE_ADMIN] }
        - { path: /screeningtoollist, roles: [ROLE_0AUTH_USER, ROLE_ADMIN] }
        - { path: ^/cico, roles: [ROLE_ADMIN, ROLE_USER_PBS_TEAM_MEMBER] }
        - { path: ^/cicodata, roles: [ROLE_ADMIN, ROLE_0AUTH_USER] }
        - { path: /cicolist, roles: [ROLE_ADMIN, ROLE_0AUTH_USER] }
        - { path: /rewards, roles: [ROLE_ADMIN, ROLE_0AUTH_USER] }
        - { path: /rewardslist, roles: [ROLE_ADMIN, ROLE_0AUTH_USER] }
        - { path: /odr, roles: [ROLE_ADMIN, ROLE_0AUTH_USER] }
        - { path: /odrlist, roles: [ROLE_ADMIN, ROLE_0AUTH_USER] }
        - { path: ^/generateaccessdata, roles: [ROLE_ADMIN, ROLE_USER_PBS_TEAM_MEMBER, ROLE_USER_TEACHER_COORDINATOR] }


        # - { path: ^/profile, roles: ROLE_USER }
