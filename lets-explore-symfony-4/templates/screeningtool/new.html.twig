{% extends 'base.html.twig' %}

{% block title %}ScreeningTool{% endblock title %}

{% block stylesheets %}
    {{ parent() }}


{% endblock %}

{% block main %}
    {% if screeningTool.matrix is not empty %}
        <div class="container-fluid">

        <!--Section: Inputs-->
        <section class="section card mb-5">

            <div class="card-body">

                <!--Section heading-->
                <h1 class="text-center my-5 h1">SWPBS Expectations Screening Tool </h1>

                {{ form_start(form) }}

                <div class="row">
                    <div class="col-md-6">
         Please evaluate the student:
                    </div>
                </div>
                    <div class="row">

                    <div class="col-md-6">
                        {{ form_row(form.student) }}
                    </div>
                </div>


                {% if(screeningTool.matrix.expectationTags | length ) == 1 %}
        {% set sizeColumn = 4 %}
    {% endif %}

    {% if(screeningTool.matrix.expectationTags | length ) == 2 %}
        {% set sizeColumn = 3 %}
    {% endif %}

    {% if(screeningTool.matrix.expectationTags | length ) == 3 %}
        {% set sizeColumn = 3 %}
    {% endif %}

    {% if(screeningTool.matrix.expectationTags | length ) == 4 %}
        {% set sizeColumn = 2 %}
    {% endif %}

    {% if(screeningTool.matrix.expectationTags | length ) == 5 %}
        {% set sizeColumn = 1 %}
    {% endif %}

    {% set formDataIndex = 0 %}

    <div class="row" style="padding-left: 25px">
        <div class="col-{{ sizeColumn }} col-sm-{{ sizeColumn }}">
          <h3><b>Expectations</b></h3>
        </div>
    </div>
<br>

    {% for key, screeningToolData in form.screeningToolData %}
        <div class="row" style="padding-left: 25px">
            <div class="col-{{ sizeColumn }} col-sm-{{ sizeColumn }}">
                {{ matrix.expectationTags[key].name }}
            </div>

            <div class="col-{{ sizeColumn }} col-sm-{{ sizeColumn }}">
                {{ form_widget(screeningToolData.value) }}

                <div class="d-none">
                    {{ form_widget(screeningToolData.expectation) }}
                </div>
            </div>
        </div>
        <br>
    {% endfor %}

<div class="row">
        <div class="col-sm-10">{{ form_row(form.submit)}}</div>

</div>
            </div>
        </section>
    </div>
    {{ form_row(form._token) }}
    {{ form_end(form, {'render_rest': false}) }}

{% else %}
                <div class="container-fluid">

        <!--Section: Inputs-->
        <section class="section card mb-5">

            <div class="card-body">

                <!--Section heading-->
                <h1 class="text-center my-5 h1">SWPBS Expectations Screening Tool </h1>
                <h4 class="text-center my-5 h1">Expectations Matrix not defined </h4>

                </div>
                </section>
                </div>
{% endif %}
{% endblock %}

{% block javascripts %}
    {{ parent () }}
    <script>


        $(document).ready( function() {
            $('.mdb-select').material_select();


        });



        function addTagForm($collectionHolder) {


            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            //  console.log(prototype);

            // get the new index
            var index = $collectionHolder.data('index');



            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);
            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            $('#thresholds2').append(newForm);

        }

        //bisogna differenziare il totale di ogni riga
        /*
        for(var i=0; i<expectations.length; i++){
             $('#tabella').on('change', "input[id*='defaultInline"+ i +"']", function(){
                     console.log($(this).next().text());
                     $("div[id^='tot"+ i +"']").append($(this).next().text());
             });
         }*/

        //totRow = 0;
        //totCol = 0;




        //console.log(selectorName.substr(selectorName.length - 1, 1));
        //  $('#col' + selectorName.substr(selectorName.length - 1, 1)).text(totCol);

        //$('#colonna').text(totCol);


        /* funziona
        $('div[id*=tot]').each(function(){
            partialTotal = parseInt($(this).text());

            totSum = (isNaN(partialTotal)) ? totSum : totSum + partialTotal;

            $('#sumSpan').text(totSum);
        });*/




    </script>

{% endblock %}