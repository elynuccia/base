{% extends 'base.html.twig' %}

{% block title %}Our Contact Form{% endblock title %}

{% block body %}

        {{ form_start(form) }}
        {{ form_widget(form)}}

        <ul class="tags" data-prototype="{{ form_widget(form.tags.vars.prototype)|e('html_attr') }}">
            {% for tag in form.tags %}
                <li> {{ form_row(tag.name) }}
                </li>
            {% endfor %}
        </ul>

        <input type="submit" value="Send" class="btn btn-success" />
        {{ form_end(form) }}

{% endblock %}

{% block javascripts %}
    {{ parent () }}
<script>
    var $collectionHolder;
    var $var;

    $(document).ready( function() {

        $collectionHolder = $('ul.tags');
        console.log($collectionHolder);

        $var= $('#contact_expectations');
        console.log($var);
        $collectionHolder.data('index', $collectionHolder.find(':input').length);

        $var.on('change', function(e) {
            // prevent the link from creating a "#" on the URL
            alert("onchange event");
            //e.preventDefault();

            for (var i = 0; i < e.currentTarget.value; i++) {

              addTagForm($collectionHolder);
            }
            // add a new tag form (see next code block)


            }


        );

    });

    function addTagForm($collectionHolder) {

        // Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');

        // get the new index
        var index = $collectionHolder.data('index');

        var newForm = prototype;
        // You need this only if you didn't set 'label' => false in your tags field in TaskType
        // Replace '__name__label__' in the prototype's HTML to
        // instead be a number based on how many items we have
        // newForm = newForm.replace(/__name__label__/g, index);

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        newForm = newForm.replace(/__name__/g, index);

        // increase the index with one for the next item
        $collectionHolder.data('index', index + 1);



    }

</script>
{% endblock %}